{"ast":null,"code":"var _jsxFileName = \"D:\\\\JSPATH\\\\nft-application\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { ethers } from 'ethers';\nimport React, { useCallback, useEffect, useState } from 'react';\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json';\nimport MyNFTABI from './abis/MyNFT.json';\n\n// 这里是你的合约地址\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MYNFT_ADDRESS = \"0x414D716fbd0F8B708dB7342B1Ac681939B49779F\";\nconst MARKET_ADDRESS = \"0x8B23398cbd6BC673e67cd76faE7EA21c967Ba861\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  // const [provider, setProvider] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenId, setTokenId] = useState('');\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n      // setProvider(newProvider);\n\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!nftContract || !tokenCID) return;\n    setLoading(true);\n    try {\n      const transaction = await nftContract.safeMint(account, tokenCID);\n      await transaction.wait();\n      alert('NFT Minted Successfully!');\n    } catch (err) {\n      console.error(err);\n      alert('Error minting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 列出 NFT 出售\n  const listNFTForSale = async () => {\n    if (!marketContract || !tokenId || !price) return;\n    setLoading(true);\n    try {\n      const transaction = await marketContract.listNFTForSale(tokenId, ethers.utils.parseEther(price));\n      await transaction.wait();\n      alert('NFT listed for sale!');\n    } catch (err) {\n      console.error(err);\n      alert('Error listing NFT for sale');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const delistNFT = async id => {\n    if (!marketContract) return;\n    setLoading(true);\n    try {\n      const transaction = await marketContract.delistNFT(id);\n      await transaction.wait();\n      alert('NFT delisted from sale');\n    } catch (err) {\n      console.error(err);\n      alert('Error delisting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 购买 NFT\n  const buyNFT = async (tokenId, price) => {\n    if (!account || !marketContract || !nftContract) return;\n    try {\n      setLoading(true);\n      const priceInWei = ethers.utils.parseEther(price); // 将 ETH 转为 Wei（以太坊最小单位）\n\n      // 调用合约购买 NFT\n      const tx = await marketContract.buyNFT(tokenId, {\n        value: priceInWei\n      });\n\n      // 等待交易完成\n      await tx.wait();\n      alert('NFT purchased successfully!');\n      fetchNftsForSale(); // 重新加载市场数据\n    } catch (err) {\n      console.error(err);\n      alert('Error buying NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchNftsForSale = useCallback(async () => {\n    if (!marketContract || !nftContract) return;\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const nfts = [];\n      for (let i = 0; i < totalSupply.toNumber(); i++) {\n        const tokenId = await nftContract.tokenByIndex(i);\n        const priceBigNumber = await marketContract.getPrice(tokenId);\n        const price = ethers.utils.formatEther(priceBigNumber).toString();\n        console.log('price formatted as ETH:', price);\n        const isForSale = await marketContract.isForSale(tokenId);\n        console.log('isForSale:', isForSale);\n        if (isForSale) {\n          nfts.push({\n            tokenId: tokenId.toString(),\n            price: price // 将价格确保是字符串\n          });\n        }\n      }\n      setNftsForSale(nfts);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching NFTs for sale');\n    }\n  }, [marketContract, nftContract]);\n  const fetchMetadata = async uri => {\n    // 使用 fetch 来获取元数据\n    try {\n      const response = await fetch(uri);\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error('Error fetching metadata:', err);\n      return null;\n    }\n  };\n\n  // 获取用户的所有 NFT\n  const fetchUserNFTs = useCallback(async () => {\n    console.log('nftContract:', nftContract);\n    console.log('account:', account);\n    if (!nftContract || !account) return;\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      console.log('totalSupply', totalSupply.toString());\n      const userNFTs = [];\n      for (let i = 0; i < totalSupply.toNumber(); i++) {\n        const tokenId = await nftContract.tokenByIndex(i);\n        const owner = await nftContract.ownerOf(tokenId);\n        const tokenURI = await nftContract.tokenURI(tokenId); // 获取tokenURI\n        const metadata = await fetchMetadata(tokenURI); // 获取元数据\n        console.log('owner of tokenId', tokenId.toString(), 'is', owner.toString());\n        console.log(metadata.name);\n        if (owner === account) {\n          userNFTs.push({\n            tokenId,\n            metadata\n          });\n        }\n      }\n      setUserNFTs(userNFTs);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching user NFTs');\n    }\n  }, [nftContract, account]);\n\n  // 页面加载时获取市场上的 NFT\n  useEffect(() => {\n    if (marketContract) {\n      fetchNftsForSale();\n    }\n  }, [marketContract, nftContract, fetchNftsForSale]);\n\n  // 页面加载时获取用户的 NFT\n  useEffect(() => {\n    if (nftContract && account) {\n      fetchUserNFTs();\n    }\n  }, [nftContract, account, fetchUserNFTs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NFT Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected as \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mint an NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Token CID\",\n        value: tokenCID,\n        onChange: e => setTokenCID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mintNFT,\n        disabled: loading,\n        children: loading ? 'Minting...' : 'Mint NFT'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List NFT for Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter Token ID\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Price (ETH)\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: listNFTForSale,\n        disabled: loading,\n        children: loading ? 'Listing...' : 'List NFT'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), userNFTs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't own any NFTs yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userNFTs.map(({\n          tokenId,\n          metadata\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: metadata.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: metadata.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: metadata.image,\n            alt: metadata.name,\n            style: {\n              width: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => delistNFT(tokenId),\n            disabled: loading,\n            style: {\n              marginTop: '10px'\n            } // 这个样式可以确保按钮和图片之间有间距\n            ,\n            children: loading ? 'Removing...' : 'Remove from Sale'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }, this)]\n        }, tokenId.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NFTs for Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), nftsForSale.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No NFTs for sale.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: nftsForSale.map(({\n          tokenId,\n          price\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Token ID: \", tokenId.toString(), \", Price: \", price.toString(), \" ETH\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => buyNFT(tokenId, price),\n            disabled: loading,\n            children: loading ? 'Purchasing...' : 'Buy NFT'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 19\n          }, this)]\n        }, tokenId.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7ciTAZLdF2OwR8zHzL/eeAWkVA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","React","useCallback","useEffect","useState","MarketABI","MyNFTABI","jsxDEV","_jsxDEV","MYNFT_ADDRESS","MARKET_ADDRESS","App","_s","account","setAccount","nftContract","setNftContract","marketContract","setMarketContract","tokenId","setTokenId","tokenCID","setTokenCID","price","setPrice","nftsForSale","setNftsForSale","userNFTs","setUserNFTs","loading","setLoading","connectWallet","window","ethereum","newProvider","providers","Web3Provider","newSigner","getSigner","newAccount","getAddress","nftContractInstance","Contract","abi","marketContractInstance","alert","mintNFT","transaction","safeMint","wait","err","console","error","listNFTForSale","utils","parseEther","delistNFT","id","buyNFT","priceInWei","tx","value","fetchNftsForSale","totalSupply","nfts","i","toNumber","tokenByIndex","priceBigNumber","getPrice","formatEther","toString","log","isForSale","push","fetchMetadata","uri","response","fetch","data","json","fetchUserNFTs","owner","ownerOf","tokenURI","metadata","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","disabled","length","map","description","src","image","alt","style","width","marginTop","_c","$RefreshReg$"],"sources":["D:/JSPATH/nft-application/src/App.js"],"sourcesContent":["import './App.css'\n\nimport { ethers } from 'ethers'\nimport React, { useCallback, useEffect, useState } from 'react'\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json'\nimport MyNFTABI from './abis/MyNFT.json'\n\n// 这里是你的合约地址\nconst MYNFT_ADDRESS = \"0x414D716fbd0F8B708dB7342B1Ac681939B49779F\";\nconst MARKET_ADDRESS = \"0x8B23398cbd6BC673e67cd76faE7EA21c967Ba861\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  // const [provider, setProvider] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenId, setTokenId] = useState('');\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n      // setProvider(newProvider);\n\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!nftContract || !tokenCID) return;\n\n    setLoading(true);\n    try {\n      const transaction = await nftContract.safeMint(account, tokenCID);\n      await transaction.wait();\n      alert('NFT Minted Successfully!');\n    } catch (err) {\n      console.error(err);\n      alert('Error minting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 列出 NFT 出售\n  const listNFTForSale = async () => {\n    if (!marketContract || !tokenId || !price) return;\n\n    setLoading(true);\n    try {\n      const transaction = await marketContract.listNFTForSale(tokenId, ethers.utils.parseEther(price));\n      await transaction.wait();\n      alert('NFT listed for sale!');\n    } catch (err) {\n      console.error(err);\n      alert('Error listing NFT for sale');\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  \n  const delistNFT = async (id) => {\n    if (!marketContract) return;\n\n    setLoading(true);\n    try {\n      const transaction = await marketContract.delistNFT(id);\n      await transaction.wait();\n      alert('NFT delisted from sale');\n    } catch (err) {\n      console.error(err);\n      alert('Error delisting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 购买 NFT\n  const buyNFT = async (tokenId, price) => {\n    if (!account || !marketContract || !nftContract) return;\n  \n    try {\n      setLoading(true);\n  \n      const priceInWei = ethers.utils.parseEther(price); // 将 ETH 转为 Wei（以太坊最小单位）\n  \n      // 调用合约购买 NFT\n      const tx = await marketContract.buyNFT(tokenId, { value: priceInWei });\n  \n      // 等待交易完成\n      await tx.wait();\n      \n      alert('NFT purchased successfully!');\n      fetchNftsForSale(); // 重新加载市场数据\n    } catch (err) {\n      console.error(err);\n      alert('Error buying NFT');\n    } finally {\n      setLoading(false);\n    }\n  }; \n\n  const fetchNftsForSale = useCallback(async () => {\n    if (!marketContract || !nftContract) return;\n  \n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const nfts = [];\n      for (let i = 0; i < totalSupply.toNumber(); i++) { \n        const tokenId = await nftContract.tokenByIndex(i);\n        const priceBigNumber = await marketContract.getPrice(tokenId);\n       const price = ethers.utils.formatEther(priceBigNumber).toString(); \n        console.log('price formatted as ETH:', price);\n  \n        const isForSale = await marketContract.isForSale(tokenId);\n        console.log('isForSale:', isForSale);\n  \n        if (isForSale) {\n          nfts.push({\n            tokenId: tokenId.toString(),\n            price: price, // 将价格确保是字符串\n          });\n        }\n      }\n  \n      setNftsForSale(nfts);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching NFTs for sale');\n    }\n  }, [marketContract, nftContract]);\n  \n  const fetchMetadata = async (uri) => {\n    // 使用 fetch 来获取元数据\n    try {\n      const response = await fetch(uri);\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error('Error fetching metadata:', err);\n      return null;\n    }\n  };\n  \n  // 获取用户的所有 NFT\n  const fetchUserNFTs = useCallback(async () => {\n    console.log('nftContract:', nftContract);\n    console.log('account:', account);\n  \n    if (!nftContract || !account) return;\n  \n    try {\n      const totalSupply = await nftContract.totalSupply();\n      console.log('totalSupply',totalSupply.toString());\n      const userNFTs = [];\n      for (let i = 0; i < totalSupply.toNumber(); i++) {\n        const tokenId = await nftContract.tokenByIndex(i);\n        const owner = await nftContract.ownerOf(tokenId);\n        const tokenURI = await nftContract.tokenURI(tokenId);  // 获取tokenURI\n        const metadata = await fetchMetadata(tokenURI);  // 获取元数据\n        console.log('owner of tokenId', tokenId.toString(), 'is', owner.toString());\n        console.log(metadata.name);\n        if (owner === account) {\n          userNFTs.push({tokenId,metadata});\n        }\n      }\n        setUserNFTs(userNFTs);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching user NFTs');\n    }\n  }, [nftContract, account]);\n\n  // 页面加载时获取市场上的 NFT\n  useEffect(() => {\n    if (marketContract) {\n      fetchNftsForSale();\n    }\n  }, [marketContract, nftContract, fetchNftsForSale]);\n\n  // 页面加载时获取用户的 NFT\n  useEffect(() => {\n    if (nftContract && account) {\n      fetchUserNFTs();\n    }\n  }, [nftContract, account, fetchUserNFTs]);  \n\n  return (\n    <div className=\"App\">\n      <h1>NFT Marketplace</h1>\n      {!account ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <div>\n          <p>Connected as {account}</p>\n          <h2>Mint an NFT</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Token CID\"\n            value={tokenCID}\n            onChange={(e) => setTokenCID(e.target.value)}\n          />\n          <button onClick={mintNFT} disabled={loading}>\n            {loading ? 'Minting...' : 'Mint NFT'}\n          </button>\n\n          <h2>List NFT for Sale</h2>\n          <input\n            type=\"number\"\n            placeholder=\"Enter Token ID\"\n            value={tokenId}\n            onChange={(e) => setTokenId(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Enter Price (ETH)\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n          <button onClick={listNFTForSale} disabled={loading}>\n            {loading ? 'Listing...' : 'List NFT'}\n          </button>\n\n          <h2>Your NFTs</h2>\n          {userNFTs.length === 0 ? (\n            <p>You don't own any NFTs yet.</p>\n          ) : (\n            <ul>\n              {userNFTs.map(({tokenId, metadata}) => (\n                <li key={tokenId.toString()}>\n                  <h3>{metadata.name}</h3>\n                  <p>{metadata.description}</p>\n                  <img src={metadata.image} alt={metadata.name} style={{ width: '200px' }} />\n                  {/* Token ID: {tokenId.toString()} */}\n                  <button \n                    onClick={() => delistNFT(tokenId)} \n                    disabled={loading}\n                    style={{ marginTop: '10px' }} // 这个样式可以确保按钮和图片之间有间距\n                  >\n                    {loading ? 'Removing...' : 'Remove from Sale'}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )}\n\n          <h2>NFTs for Sale</h2>\n          {nftsForSale.length === 0 ? (\n            <p>No NFTs for sale.</p>\n          ) : (\n            <ul>\n              {nftsForSale.map(({ tokenId, price }) => (\n                <li key={tokenId.toString()}>\n                  Token ID: {tokenId.toString()}, Price: {price.toString()} ETH\n                  <button onClick={() => buyNFT(tokenId, price)} disabled={loading}>\n                    {loading ? 'Purchasing...' : 'Buy NFT'}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}