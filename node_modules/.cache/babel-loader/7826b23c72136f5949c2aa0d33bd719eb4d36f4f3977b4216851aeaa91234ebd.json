{"ast":null,"code":"var _jsxFileName = \"D:\\\\JSPATH\\\\nft-application\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json';\nimport MyNFTABI from './abis/MyNFT.json';\n\n// 这里是你的合约地址\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MYNFT_ADDRESS = \"0x4C4b321C3eFd7875073412E4c514226dd828A389\";\nconst MARKET_ADDRESS = \"0x4C4f3573008CB476721038535bB7906Cb4AfC00A\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenId, setTokenId] = useState('');\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n      setProvider(newProvider);\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n      await loadUserNFTs(newSigner);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!nftContract) return;\n    setLoading(true);\n    try {\n      const transaction = await nftContract.safeMint(account, tokenCID);\n      await transaction.wait();\n      alert('NFT minted successfully!');\n    } catch (error) {\n      console.error(\"Error minting NFT:\", error);\n      alert(\"Error minting NFT.\");\n    }\n    setLoading(false);\n  };\n\n  // 展示用户持有的NFT\n  const loadUserNFTs = async signer => {\n    if (!nftContract) return;\n    try {\n      const balance = await nftContract.balanceOf(account); // 获取用户持有的NFT数量\n      const userNFTs = [];\n      for (let i = 0; i < balance; i++) {\n        const tokenId = await nftContract.tokenOfOwnerByIndex(account, i); // 获取用户每个NFT的ID\n        const tokenURI = await nftContract.tokenURI(tokenId); // 获取NFT的元数据URI\n        userNFTs.push({\n          tokenId,\n          tokenURI\n        });\n      }\n      setUserNFTs(userNFTs);\n    } catch (error) {\n      console.error(\"Error loading user NFTs:\", error);\n    }\n  };\n\n  // 上架NFT\n  const listNFTForSale = async (tokenId, price) => {\n    if (!marketContract) return;\n    try {\n      const transaction = await marketContract.listNFT(MYNFT_ADDRESS, tokenId, ethers.utils.parseEther(price));\n      await transaction.wait();\n      alert('NFT listed for sale!');\n    } catch (error) {\n      console.error(\"Error listing NFT for sale:\", error);\n      alert(\"Error listing NFT for sale.\");\n    }\n  };\n\n  // 获取市场上待售的NFT\n  const loadNftsForSale = async () => {\n    if (!marketContract) return;\n    try {\n      const nfts = await marketContract.getNftsForSale();\n      setNftsForSale(nfts);\n    } catch (error) {\n      console.error(\"Error loading NFTs for sale:\", error);\n    }\n  };\n\n  // 购买NFT\n  const buyNFT = async nft => {\n    if (!marketContract) return;\n    try {\n      const transaction = await marketContract.buyNFT(MYNFT_ADDRESS, nft.tokenId, {\n        value: nft.price\n      });\n      await transaction.wait();\n      alert('NFT purchased successfully!');\n    } catch (error) {\n      console.error(\"Error buying NFT:\", error);\n      alert(\"Error buying NFT.\");\n    }\n  };\n  useEffect(() => {\n    if (account && provider) {\n      loadNftsForSale();\n    }\n  }, [account, provider]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), account && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Connected as: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mint Your NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter token CID\",\n      value: tokenCID,\n      onChange: e => setTokenCID(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintNFT,\n      disabled: loading,\n      children: loading ? 'Minting...' : 'Mint NFT'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your NFTs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nft-gallery\",\n      children: userNFTs.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://ipfs.io/ipfs/${nft.tokenURI}`,\n          alt: `NFT ${nft.tokenId}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Token ID: \", nft.tokenId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => listNFTForSale(nft.tokenId, price),\n          children: \"List for Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"NFTs for Sale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nft-gallery\",\n      children: nftsForSale.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://ipfs.io/ipfs/${nft.tokenURI}`,\n          alt: `NFT ${nft.tokenId}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Token ID: \", nft.tokenId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", ethers.utils.formatEther(nft.price), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => buyNFT(nft),\n          children: \"Buy NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List NFT for Sale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter price in ETH\",\n      value: price,\n      onChange: e => setPrice(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"doQAn8P1+3gvX2p10Ht4AZRoEhE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","React","useEffect","useState","MarketABI","MyNFTABI","jsxDEV","_jsxDEV","MYNFT_ADDRESS","MARKET_ADDRESS","App","_s","account","setAccount","provider","setProvider","nftContract","setNftContract","marketContract","setMarketContract","tokenId","setTokenId","tokenCID","setTokenCID","price","setPrice","nftsForSale","setNftsForSale","userNFTs","setUserNFTs","loading","setLoading","connectWallet","window","ethereum","newProvider","providers","Web3Provider","newSigner","getSigner","newAccount","getAddress","nftContractInstance","Contract","abi","marketContractInstance","loadUserNFTs","alert","mintNFT","transaction","safeMint","wait","error","console","signer","balance","balanceOf","i","tokenOfOwnerByIndex","tokenURI","push","listNFTForSale","listNFT","utils","parseEther","loadNftsForSale","nfts","getNftsForSale","buyNFT","nft","value","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","disabled","map","index","src","alt","formatEther","_c","$RefreshReg$"],"sources":["D:/JSPATH/nft-application/src/App.js"],"sourcesContent":["import { ethers } from 'ethers'\nimport React, { useEffect, useState } from 'react'\nimport './App.css'\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json'\nimport MyNFTABI from './abis/MyNFT.json'\n\n// 这里是你的合约地址\nconst MYNFT_ADDRESS = \"0x4C4b321C3eFd7875073412E4c514226dd828A389\";\nconst MARKET_ADDRESS = \"0x4C4f3573008CB476721038535bB7906Cb4AfC00A\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenId, setTokenId] = useState('');\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n      setProvider(newProvider);\n\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n\n      await loadUserNFTs(newSigner);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!nftContract) return;\n    setLoading(true);\n    try {\n      const transaction = await nftContract.safeMint(account, tokenCID);\n      await transaction.wait();\n      alert('NFT minted successfully!');\n    } catch (error) {\n      console.error(\"Error minting NFT:\", error);\n      alert(\"Error minting NFT.\");\n    }\n    setLoading(false);\n  };\n\n  // 展示用户持有的NFT\n  const loadUserNFTs = async (signer) => {\n    if (!nftContract) return;\n\n    try {\n      const balance = await nftContract.balanceOf(account);  // 获取用户持有的NFT数量\n      const userNFTs = [];\n      for (let i = 0; i < balance; i++) {\n        const tokenId = await nftContract.tokenOfOwnerByIndex(account, i);  // 获取用户每个NFT的ID\n        const tokenURI = await nftContract.tokenURI(tokenId);  // 获取NFT的元数据URI\n        userNFTs.push({ tokenId, tokenURI });\n      }\n      setUserNFTs(userNFTs);\n    } catch (error) {\n      console.error(\"Error loading user NFTs:\", error);\n    }\n  };\n\n  // 上架NFT\n  const listNFTForSale = async (tokenId, price) => {\n    if (!marketContract) return;\n\n    try {\n      const transaction = await marketContract.listNFT(MYNFT_ADDRESS, tokenId, ethers.utils.parseEther(price));\n      await transaction.wait();\n      alert('NFT listed for sale!');\n    } catch (error) {\n      console.error(\"Error listing NFT for sale:\", error);\n      alert(\"Error listing NFT for sale.\");\n    }\n  };\n\n  // 获取市场上待售的NFT\n  const loadNftsForSale = async () => {\n    if (!marketContract) return;\n\n    try {\n      const nfts = await marketContract.getNftsForSale();\n      setNftsForSale(nfts);\n    } catch (error) {\n      console.error(\"Error loading NFTs for sale:\", error);\n    }\n  };\n\n  // 购买NFT\n  const buyNFT = async (nft) => {\n    if (!marketContract) return;\n\n    try {\n      const transaction = await marketContract.buyNFT(MYNFT_ADDRESS, nft.tokenId, {\n        value: nft.price\n      });\n      await transaction.wait();\n      alert('NFT purchased successfully!');\n    } catch (error) {\n      console.error(\"Error buying NFT:\", error);\n      alert(\"Error buying NFT.\");\n    }\n  };\n\n  useEffect(() => {\n    if (account && provider) {\n      loadNftsForSale();\n    }\n  }, [account, provider]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <button onClick={connectWallet}>Connect Wallet</button>\n        {account && <span>Connected as: {account}</span>}\n      </div>\n\n      <h1>Mint Your NFT</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter token CID\"\n        value={tokenCID}\n        onChange={(e) => setTokenCID(e.target.value)}\n      />\n      <button onClick={mintNFT} disabled={loading}>\n        {loading ? 'Minting...' : 'Mint NFT'}\n      </button>\n\n      <h2>Your NFTs</h2>\n      <div className=\"nft-gallery\">\n        {userNFTs.map((nft, index) => (\n          <div className=\"nft-item\" key={index}>\n            <img src={`https://ipfs.io/ipfs/${nft.tokenURI}`} alt={`NFT ${nft.tokenId}`} />\n            <p>Token ID: {nft.tokenId}</p>\n            <button onClick={() => listNFTForSale(nft.tokenId, price)}>List for Sale</button>\n          </div>\n        ))}\n      </div>\n\n      <h2>NFTs for Sale</h2>\n      <div className=\"nft-gallery\">\n        {nftsForSale.map((nft, index) => (\n          <div className=\"nft-item\" key={index}>\n            <img src={`https://ipfs.io/ipfs/${nft.tokenURI}`} alt={`NFT ${nft.tokenId}`} />\n            <p>Token ID: {nft.tokenId}</p>\n            <p>Price: {ethers.utils.formatEther(nft.price)} ETH</p>\n            <button onClick={() => buyNFT(nft)}>Buy NFT</button>\n          </div>\n        ))}\n      </div>\n\n      <h2>List NFT for Sale</h2>\n      <input\n        type=\"number\"\n        placeholder=\"Enter price in ETH\"\n        value={price}\n        onChange={(e) => setPrice(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}