{"ast":null,"code":"var _jsxFileName = \"D:\\\\JSPATH\\\\nft-application\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { ethers } from 'ethers';\nimport React, { useCallback, useEffect, useState } from 'react';\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json';\nimport MyNFTABI from './abis/MyNFT.json';\n\n// 这里是你的合约地址\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MYNFT_ADDRESS = \"0x414D716fbd0F8B708dB7342B1Ac681939B49779F\";\nconst MARKET_ADDRESS = \"0x8B23398cbd6BC673e67cd76faE7EA21c967Ba861\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  // const [provider, setProvider] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenId, setTokenId] = useState('');\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n      // setProvider(newProvider);\n\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!nftContract || !tokenCID) return;\n    setLoading(true);\n    try {\n      const transaction = await nftContract.safeMint(account, tokenCID);\n      await transaction.wait();\n      alert('NFT Minted Successfully!');\n    } catch (err) {\n      console.error(err);\n      alert('Error minting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 列出 NFT 出售\n  const listNFTForSale = async () => {\n    if (!marketContract || !tokenId || !price) return;\n    setLoading(true);\n    try {\n      const transaction = await marketContract.listNFTForSale(tokenId, ethers.utils.parseEther(price));\n      await transaction.wait();\n      alert('NFT listed for sale!');\n    } catch (err) {\n      console.error(err);\n      alert('Error listing NFT for sale');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 取消出售\n  const delistNFT = async id => {\n    if (!marketContract) return;\n    setLoading(true);\n    try {\n      const transaction = await marketContract.delistNFT(id);\n      await transaction.wait();\n      alert('NFT delisted from sale');\n    } catch (err) {\n      console.error(err);\n      alert('Error delisting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 购买 NFT\n  const buyNFT = async (tokenId, price) => {\n    if (!account || !marketContract || !nftContract) return;\n    try {\n      setLoading(true);\n      const priceInWei = ethers.utils.parseEther(price); // 将 ETH 转为 Wei（以太坊最小单位）\n\n      // 调用合约购买 NFT\n      const tx = await marketContract.buyNFT(tokenId, {\n        value: priceInWei\n      });\n\n      // 等待交易完成\n      await tx.wait();\n      alert('NFT purchased successfully!');\n      fetchNftsForSale(); // 重新加载市场数据\n    } catch (err) {\n      console.error(err);\n      alert('Error buying NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 获取市场上所有的 NFT\n  const fetchNftsForSale = useCallback(async () => {\n    if (!marketContract || !nftContract) return;\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const nfts = [];\n\n      // 遍历每个 NFT，检查其是否在出售\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenId = await nftContract.tokenByIndex(i); // 获取 tokenId\n        const price = await marketContract.getPrice(tokenId); // 获取该 NFT 的价格\n        const isForSale = await marketContract.isForSale(tokenId); // 检查是否在出售\n\n        if (isForSale) {\n          // 将 BigNumber 格式的价格转换为 ETH\n          const formattedPrice = ethers.utils.formatEther(price);\n          nfts.push({\n            tokenId,\n            price: formattedPrice\n          });\n        }\n      }\n      setNftsForSale(nfts); // 设置市场上出售的 NFT 列表\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching NFTs for sale');\n    }\n  }, [marketContract, nftContract]);\n\n  // 获取用户的所有 NFT\n  const fetchUserNFTs = useCallback(async () => {\n    if (!nftContract || !account) return;\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const userNFTs = [];\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenId = await nftContract.tokenByIndex(i);\n        const owner = await nftContract.ownerOf(tokenId);\n        if (owner === account) {\n          userNFTs.push(tokenId);\n        }\n      }\n      setUserNFTs(userNFTs);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching user NFTs');\n    }\n  }, [nftContract, account]);\n\n  // 页面加载时获取市场上的 NFT\n  useEffect(() => {\n    if (marketContract) {\n      fetchNftsForSale();\n    }\n  }, [marketContract, nftContract, fetchNftsForSale]);\n\n  // 页面加载时获取用户的 NFT\n  useEffect(() => {\n    if (nftContract && account) {\n      fetchUserNFTs();\n    }\n  }, [nftContract, account, fetchUserNFTs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NFT Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected as \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mint an NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Token CID\",\n        value: tokenCID,\n        onChange: e => setTokenCID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mintNFT,\n        disabled: loading,\n        children: loading ? 'Minting...' : 'Mint NFT'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List NFT for Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter Token ID\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Price (ETH)\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: listNFTForSale,\n        disabled: loading,\n        children: loading ? 'Listing...' : 'List NFT'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), userNFTs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't own any NFTs yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userNFTs.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Token ID: \", id, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => delistNFT(id),\n            disabled: loading,\n            children: loading ? 'Removing...' : 'Remove from Sale'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NFTs for Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), nftsForSale.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No NFTs for sale.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: nftsForSale.map(({\n          tokenId,\n          price\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Token ID: \", tokenId, \", Price: \", price, \" ETH\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => buyNFT(tokenId, price),\n            disabled: loading,\n            children: loading ? 'Purchasing...' : 'Buy NFT'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 19\n          }, this)]\n        }, tokenId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7ciTAZLdF2OwR8zHzL/eeAWkVA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","React","useCallback","useEffect","useState","MarketABI","MyNFTABI","jsxDEV","_jsxDEV","MYNFT_ADDRESS","MARKET_ADDRESS","App","_s","account","setAccount","nftContract","setNftContract","marketContract","setMarketContract","tokenId","setTokenId","tokenCID","setTokenCID","price","setPrice","nftsForSale","setNftsForSale","userNFTs","setUserNFTs","loading","setLoading","connectWallet","window","ethereum","newProvider","providers","Web3Provider","newSigner","getSigner","newAccount","getAddress","nftContractInstance","Contract","abi","marketContractInstance","alert","mintNFT","transaction","safeMint","wait","err","console","error","listNFTForSale","utils","parseEther","delistNFT","id","buyNFT","priceInWei","tx","value","fetchNftsForSale","totalSupply","nfts","i","tokenByIndex","getPrice","isForSale","formattedPrice","formatEther","push","fetchUserNFTs","owner","ownerOf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","disabled","length","map","_c","$RefreshReg$"],"sources":["D:/JSPATH/nft-application/src/App.js"],"sourcesContent":["import './App.css'\n\nimport { ethers } from 'ethers'\nimport React, { useCallback, useEffect, useState } from 'react'\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json'\nimport MyNFTABI from './abis/MyNFT.json'\n\n// 这里是你的合约地址\nconst MYNFT_ADDRESS = \"0x414D716fbd0F8B708dB7342B1Ac681939B49779F\";\nconst MARKET_ADDRESS = \"0x8B23398cbd6BC673e67cd76faE7EA21c967Ba861\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  // const [provider, setProvider] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenId, setTokenId] = useState('');\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n      // setProvider(newProvider);\n\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!nftContract || !tokenCID) return;\n\n    setLoading(true);\n    try {\n      const transaction = await nftContract.safeMint(account, tokenCID);\n      await transaction.wait();\n      alert('NFT Minted Successfully!');\n    } catch (err) {\n      console.error(err);\n      alert('Error minting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 列出 NFT 出售\n  const listNFTForSale = async () => {\n    if (!marketContract || !tokenId || !price) return;\n\n    setLoading(true);\n    try {\n      const transaction = await marketContract.listNFTForSale(tokenId, ethers.utils.parseEther(price));\n      await transaction.wait();\n      alert('NFT listed for sale!');\n    } catch (err) {\n      console.error(err);\n      alert('Error listing NFT for sale');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 取消出售\n  const delistNFT = async (id) => {\n    if (!marketContract) return;\n\n    setLoading(true);\n    try {\n      const transaction = await marketContract.delistNFT(id);\n      await transaction.wait();\n      alert('NFT delisted from sale');\n    } catch (err) {\n      console.error(err);\n      alert('Error delisting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 购买 NFT\n  const buyNFT = async (tokenId, price) => {\n    if (!account || !marketContract || !nftContract) return;\n  \n    try {\n      setLoading(true);\n  \n      const priceInWei = ethers.utils.parseEther(price); // 将 ETH 转为 Wei（以太坊最小单位）\n  \n      // 调用合约购买 NFT\n      const tx = await marketContract.buyNFT(tokenId, { value: priceInWei });\n  \n      // 等待交易完成\n      await tx.wait();\n      \n      alert('NFT purchased successfully!');\n      fetchNftsForSale(); // 重新加载市场数据\n    } catch (err) {\n      console.error(err);\n      alert('Error buying NFT');\n    } finally {\n      setLoading(false);\n    }\n  };  \n\n  // 获取市场上所有的 NFT\n  const fetchNftsForSale = useCallback(async () => {\n    if (!marketContract || !nftContract) return;\n\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const nfts = [];\n\n      // 遍历每个 NFT，检查其是否在出售\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenId = await nftContract.tokenByIndex(i); // 获取 tokenId\n        const price = await marketContract.getPrice(tokenId); // 获取该 NFT 的价格\n        const isForSale = await marketContract.isForSale(tokenId); // 检查是否在出售\n\n        if (isForSale) {\n          // 将 BigNumber 格式的价格转换为 ETH\n          const formattedPrice = ethers.utils.formatEther(price);\n          nfts.push({ tokenId, price: formattedPrice });\n        }\n      }\n\n      setNftsForSale(nfts); // 设置市场上出售的 NFT 列表\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching NFTs for sale');\n    }\n  }, [marketContract, nftContract]);\n\n\n  // 获取用户的所有 NFT\n  const fetchUserNFTs = useCallback(async () => {\n    if (!nftContract || !account) return;\n\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const userNFTs = [];\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenId = await nftContract.tokenByIndex(i);\n        const owner = await nftContract.ownerOf(tokenId);\n        if (owner === account) {\n          userNFTs.push(tokenId);\n        }\n      }\n      setUserNFTs(userNFTs);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching user NFTs');\n    }\n  }, [nftContract, account]);\n\n  // 页面加载时获取市场上的 NFT\n  useEffect(() => {\n    if (marketContract) {\n      fetchNftsForSale();\n    }\n  }, [marketContract,nftContract, fetchNftsForSale]);\n\n  // 页面加载时获取用户的 NFT\n  useEffect(() => {\n    if (nftContract && account) {\n      fetchUserNFTs();\n    }\n  }, [nftContract, account, fetchUserNFTs]);\n\n  return (\n    <div className=\"App\">\n      <h1>NFT Marketplace</h1>\n      {!account ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <div>\n          <p>Connected as {account}</p>\n          <h2>Mint an NFT</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Token CID\"\n            value={tokenCID}\n            onChange={(e) => setTokenCID(e.target.value)}\n          />\n          <button onClick={mintNFT} disabled={loading}>\n            {loading ? 'Minting...' : 'Mint NFT'}\n          </button>\n\n          <h2>List NFT for Sale</h2>\n          <input\n            type=\"number\"\n            placeholder=\"Enter Token ID\"\n            value={tokenId}\n            onChange={(e) => setTokenId(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Enter Price (ETH)\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n          <button onClick={listNFTForSale} disabled={loading}>\n            {loading ? 'Listing...' : 'List NFT'}\n          </button>\n\n          <h2>Your NFTs</h2>\n          {userNFTs.length === 0 ? (\n            <p>You don't own any NFTs yet.</p>\n          ) : (\n            <ul>\n              {userNFTs.map((id) => (\n                <li key={id}>\n                  Token ID: {id}\n                  <button onClick={() => delistNFT(id)} disabled={loading}>\n                    {loading ? 'Removing...' : 'Remove from Sale'}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )}\n\n          <h2>NFTs for Sale</h2>\n          {nftsForSale.length === 0 ? (\n            <p>No NFTs for sale.</p>\n          ) : (\n            <ul>\n              {nftsForSale.map(({ tokenId, price }) => (\n                <li key={tokenId}>\n                  Token ID: {tokenId}, Price: {price} ETH\n                  <button onClick={() => buyNFT(tokenId, price)} disabled={loading}>\n                    {loading ? 'Purchasing...' : 'Buy NFT'}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}