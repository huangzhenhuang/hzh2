{"ast":null,"code":"var _jsxFileName = \"D:\\\\JSPATH\\\\nft-application\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { ethers } from 'ethers';\nimport React, { useCallback, useEffect, useState } from 'react';\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json';\nimport MyNFTABI from './abis/MyNFT.json';\n\n// 这里是你的合约地址\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MYNFT_ADDRESS = \"0x414D716fbd0F8B708dB7342B1Ac681939B49779F\";\nconst MARKET_ADDRESS = \"0x8B23398cbd6BC673e67cd76faE7EA21c967Ba861\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenId, setTokenId] = useState('');\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n      setProvider(newProvider);\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!nftContract || !tokenCID) return;\n    setLoading(true);\n    try {\n      const transaction = await nftContract.safeMint(account, tokenCID);\n      await transaction.wait();\n      alert('NFT Minted Successfully!');\n    } catch (err) {\n      console.error(err);\n      alert('Error minting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 列出 NFT 出售\n  const listNFTForSale = async () => {\n    if (!marketContract || !tokenId || !price) return;\n    setLoading(true);\n    try {\n      const transaction = await marketContract.listNFTForSale(tokenId, ethers.utils.parseEther(price));\n      await transaction.wait();\n      alert('NFT listed for sale!');\n    } catch (err) {\n      console.error(err);\n      alert('Error listing NFT for sale');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 取消出售\n  const delistNFT = async id => {\n    if (!marketContract) return;\n    setLoading(true);\n    try {\n      const transaction = await marketContract.delistNFT(id);\n      await transaction.wait();\n      alert('NFT delisted from sale');\n    } catch (err) {\n      console.error(err);\n      alert('Error delisting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 购买 NFT\n  const buyNFT = async (id, price) => {\n    if (!marketContract || !account) return;\n    setLoading(true);\n    try {\n      const transaction = await marketContract.buyNFT(id, {\n        value: price\n      });\n      await transaction.wait();\n      alert('NFT Purchased!');\n    } catch (err) {\n      console.error(err);\n      alert('Error purchasing NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 获取市场上所有的 NFT\n  const fetchNftsForSale = useCallback(async () => {\n    if (!marketContract) return;\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const nfts = [];\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenId = await nftContract.tokenByIndex(i);\n        const price = await marketContract.getPrice(tokenId);\n        const isForSale = await marketContract.isForSale(tokenId);\n        if (isForSale) {\n          nfts.push({\n            tokenId,\n            price\n          });\n        }\n      }\n      setNftsForSale(nfts);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching NFTs for sale');\n    }\n  });\n\n  // 获取用户的所有 NFT\n  const fetchUserNFTs = async () => {\n    if (!nftContract || !account) return;\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const userNFTs = [];\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenId = await nftContract.tokenByIndex(i);\n        const owner = await nftContract.ownerOf(tokenId);\n        if (owner === account) {\n          userNFTs.push(tokenId);\n        }\n      }\n      setUserNFTs(userNFTs);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching user NFTs');\n    }\n  };\n\n  // 页面加载时获取市场上的 NFT\n  useEffect(() => {\n    if (marketContract) {\n      fetchNftsForSale();\n    }\n  }, [marketContract, fetchNftsForSale]);\n\n  // 页面加载时获取用户的 NFT\n  useEffect(() => {\n    if (nftContract && account) {\n      fetchUserNFTs();\n    }\n  }, [nftContract, account]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NFT Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected as \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mint an NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Token CID\",\n        value: tokenCID,\n        onChange: e => setTokenCID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mintNFT,\n        disabled: loading,\n        children: loading ? 'Minting...' : 'Mint NFT'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List NFT for Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter Token ID\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Price (ETH)\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: listNFTForSale,\n        disabled: loading,\n        children: loading ? 'Listing...' : 'List NFT'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), userNFTs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't own any NFTs yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userNFTs.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Token ID: \", id, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => delistNFT(id),\n            disabled: loading,\n            children: loading ? 'Removing...' : 'Remove from Sale'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 19\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NFTs for Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), nftsForSale.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No NFTs for sale.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: nftsForSale.map(({\n          tokenId,\n          price\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Token ID: \", tokenId, \", Price: \", ethers.utils.formatEther(price), \" ETH\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => buyNFT(tokenId, price),\n            disabled: loading,\n            children: loading ? 'Purchasing...' : 'Buy NFT'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }, this)]\n        }, tokenId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QEoDCekhbk5UN4d1aq5OItLu6eE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","React","useCallback","useEffect","useState","MarketABI","MyNFTABI","jsxDEV","_jsxDEV","MYNFT_ADDRESS","MARKET_ADDRESS","App","_s","account","setAccount","provider","setProvider","nftContract","setNftContract","marketContract","setMarketContract","tokenId","setTokenId","tokenCID","setTokenCID","price","setPrice","nftsForSale","setNftsForSale","userNFTs","setUserNFTs","loading","setLoading","connectWallet","window","ethereum","newProvider","providers","Web3Provider","newSigner","getSigner","newAccount","getAddress","nftContractInstance","Contract","abi","marketContractInstance","alert","mintNFT","transaction","safeMint","wait","err","console","error","listNFTForSale","utils","parseEther","delistNFT","id","buyNFT","value","fetchNftsForSale","totalSupply","nfts","i","tokenByIndex","getPrice","isForSale","push","fetchUserNFTs","owner","ownerOf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","disabled","length","map","formatEther","_c","$RefreshReg$"],"sources":["D:/JSPATH/nft-application/src/App.js"],"sourcesContent":["import './App.css'\n\nimport { ethers } from 'ethers'\nimport React, { useCallback, useEffect, useState } from 'react'\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json'\nimport MyNFTABI from './abis/MyNFT.json'\n\n// 这里是你的合约地址\nconst MYNFT_ADDRESS = \"0x414D716fbd0F8B708dB7342B1Ac681939B49779F\";\nconst MARKET_ADDRESS = \"0x8B23398cbd6BC673e67cd76faE7EA21c967Ba861\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenId, setTokenId] = useState('');\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n      setProvider(newProvider);\n\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!nftContract || !tokenCID) return;\n\n    setLoading(true);\n    try {\n      const transaction = await nftContract.safeMint(account, tokenCID);\n      await transaction.wait();\n      alert('NFT Minted Successfully!');\n    } catch (err) {\n      console.error(err);\n      alert('Error minting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 列出 NFT 出售\n  const listNFTForSale = async () => {\n    if (!marketContract || !tokenId || !price) return;\n\n    setLoading(true);\n    try {\n      const transaction = await marketContract.listNFTForSale(tokenId, ethers.utils.parseEther(price));\n      await transaction.wait();\n      alert('NFT listed for sale!');\n    } catch (err) {\n      console.error(err);\n      alert('Error listing NFT for sale');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 取消出售\n  const delistNFT = async (id) => {\n    if (!marketContract) return;\n\n    setLoading(true);\n    try {\n      const transaction = await marketContract.delistNFT(id);\n      await transaction.wait();\n      alert('NFT delisted from sale');\n    } catch (err) {\n      console.error(err);\n      alert('Error delisting NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 购买 NFT\n  const buyNFT = async (id, price) => {\n    if (!marketContract || !account) return;\n\n    setLoading(true);\n    try {\n      const transaction = await marketContract.buyNFT(id, { value: price });\n      await transaction.wait();\n      alert('NFT Purchased!');\n    } catch (err) {\n      console.error(err);\n      alert('Error purchasing NFT');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 获取市场上所有的 NFT\n  const fetchNftsForSale = useCallback(async () => {\n    if (!marketContract) return;\n\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const nfts = [];\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenId = await nftContract.tokenByIndex(i);\n        const price = await marketContract.getPrice(tokenId);\n        const isForSale = await marketContract.isForSale(tokenId);\n        if (isForSale) {\n          nfts.push({ tokenId, price });\n        }\n      }\n      setNftsForSale(nfts);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching NFTs for sale');\n    }\n  });\n\n  // 获取用户的所有 NFT\n  const fetchUserNFTs = async () => {\n    if (!nftContract || !account) return;\n\n    try {\n      const totalSupply = await nftContract.totalSupply();\n      const userNFTs = [];\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenId = await nftContract.tokenByIndex(i);\n        const owner = await nftContract.ownerOf(tokenId);\n        if (owner === account) {\n          userNFTs.push(tokenId);\n        }\n      }\n      setUserNFTs(userNFTs);\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching user NFTs');\n    }\n  };\n\n  // 页面加载时获取市场上的 NFT\n  useEffect(() => {\n    if (marketContract) {\n      fetchNftsForSale();\n    }\n  }, [marketContract, fetchNftsForSale]);\n\n  // 页面加载时获取用户的 NFT\n  useEffect(() => {\n    if (nftContract && account) {\n      fetchUserNFTs();\n    }\n  }, [nftContract, account]);\n\n  return (\n    <div className=\"App\">\n      <h1>NFT Marketplace</h1>\n      {!account ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <div>\n          <p>Connected as {account}</p>\n          <h2>Mint an NFT</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Token CID\"\n            value={tokenCID}\n            onChange={(e) => setTokenCID(e.target.value)}\n          />\n          <button onClick={mintNFT} disabled={loading}>\n            {loading ? 'Minting...' : 'Mint NFT'}\n          </button>\n\n          <h2>List NFT for Sale</h2>\n          <input\n            type=\"number\"\n            placeholder=\"Enter Token ID\"\n            value={tokenId}\n            onChange={(e) => setTokenId(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Enter Price (ETH)\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n          <button onClick={listNFTForSale} disabled={loading}>\n            {loading ? 'Listing...' : 'List NFT'}\n          </button>\n\n          <h2>Your NFTs</h2>\n          {userNFTs.length === 0 ? (\n            <p>You don't own any NFTs yet.</p>\n          ) : (\n            <ul>\n              {userNFTs.map((id) => (\n                <li key={id}>\n                  Token ID: {id}\n                  <button onClick={() => delistNFT(id)} disabled={loading}>\n                    {loading ? 'Removing...' : 'Remove from Sale'}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )}\n\n          <h2>NFTs for Sale</h2>\n          {nftsForSale.length === 0 ? (\n            <p>No NFTs for sale.</p>\n          ) : (\n            <ul>\n              {nftsForSale.map(({ tokenId, price }) => (\n                <li key={tokenId}>\n                  Token ID: {tokenId}, Price: {ethers.utils.formatEther(price)} ETH\n                  <button onClick={() => buyNFT(tokenId, price)} disabled={loading}>\n                    {loading ? 'Purchasing...' : 'Buy NFT'}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}