{"ast":null,"code":"var _jsxFileName = \"D:\\\\JSPATH\\\\nft-application\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json';\nimport MyNFTABI from './abis/MyNFT.json';\n\n// 这里是你的合约地址\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MYNFT_ADDRESS = \"0x4C4b321C3eFd7875073412E4c514226dd828A389\";\nconst MARKET_ADDRESS = \"0x4C4f3573008CB476721038535bB7906Cb4AfC00A\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!tokenCID) return alert('Please enter a token CID!');\n    setLoading(true);\n    try {\n      const tx = await nftContract.safeMint(account, tokenCID);\n      await tx.wait();\n      alert('NFT minted successfully!');\n    } catch (err) {\n      console.error(err);\n      alert('Error minting NFT!');\n    }\n    setLoading(false);\n  };\n\n  // 上架 NFT\n  const listNFT = async (tokenId, price) => {\n    if (!price) return alert('Please enter a price!');\n    setLoading(true);\n    try {\n      const tx = await marketContract.listNFT(MYNFT_ADDRESS, tokenId, ethers.utils.parseEther(price));\n      await tx.wait();\n      alert('NFT listed for sale!');\n      loadNftsForSale(); // 更新市场上架的 NFT\n    } catch (err) {\n      console.error(err);\n      alert('Error listing NFT!');\n    }\n    setLoading(false);\n  };\n\n  // 购买 NFT\n  const buyNFT = async (tokenId, price) => {\n    setLoading(true);\n    try {\n      const tx = await marketContract.buyNFT(MYNFT_ADDRESS, tokenId, {\n        value: price\n      });\n      await tx.wait();\n      alert('NFT purchased successfully!');\n      loadNftsForSale(); // 更新市场上架的 NFT\n      loadUserNFTs(); // 更新用户持有的 NFT\n    } catch (err) {\n      console.error(err);\n      alert('Error purchasing NFT!');\n    }\n    setLoading(false);\n  };\n\n  // 加载市场中的待售 NFT\n  const loadNftsForSale = async () => {\n    const nftCount = await marketContract.getListedNFTCount();\n    const nfts = [];\n    for (let i = 0; i < nftCount; i++) {\n      const nft = await marketContract.getListedNFT(i);\n      nfts.push(nft);\n    }\n    setNftsForSale(nfts);\n  };\n\n  // 加载用户持有的 NFT\n  const loadUserNFTs = async () => {\n    const balance = await nftContract.balanceOf(account);\n    const nfts = [];\n    for (let i = 0; i < balance; i++) {\n      const tokenId = await nftContract.tokenOfOwnerByIndex(account, i);\n      const tokenCID = await nftContract.tokenURI(tokenId);\n      nfts.push({\n        tokenId,\n        tokenCID\n      });\n    }\n    setUserNFTs(nfts);\n  };\n  useEffect(() => {\n    if (account && nftContract && marketContract) {\n      loadNftsForSale();\n      loadUserNFTs();\n    }\n  }, [account, nftContract, marketContract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My NFT Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Connected as: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Token CID\",\n        value: tokenCID,\n        onChange: e => setTokenCID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mintNFT,\n        disabled: loading,\n        children: loading ? 'Minting...' : 'Mint NFT'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nft-list\",\n          children: userNFTs.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://ipfs.io/ipfs/${nft.tokenCID}`,\n              alt: `NFT ${nft.tokenId}`,\n              className: \"nft-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => listNFT(nft.tokenId, price),\n              children: \"List for Sale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Price (ETH)\",\n              value: price,\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"NFTs for Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nft-list\",\n          children: nftsForSale.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://ipfs.io/ipfs/${nft.tokenCID}`,\n              alt: `NFT ${nft.tokenId}`,\n              className: \"nft-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => buyNFT(nft.tokenId, nft.price),\n              children: [\"Buy for \", ethers.utils.formatEther(nft.price), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KOwCaHybRbvmB6ILXhoS+IB56fs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","React","useEffect","useState","MarketABI","MyNFTABI","jsxDEV","_jsxDEV","MYNFT_ADDRESS","MARKET_ADDRESS","App","_s","account","setAccount","nftContract","setNftContract","marketContract","setMarketContract","tokenCID","setTokenCID","price","setPrice","nftsForSale","setNftsForSale","userNFTs","setUserNFTs","loading","setLoading","connectWallet","window","ethereum","newProvider","providers","Web3Provider","newSigner","getSigner","newAccount","getAddress","nftContractInstance","Contract","abi","marketContractInstance","alert","mintNFT","tx","safeMint","wait","err","console","error","listNFT","tokenId","utils","parseEther","loadNftsForSale","buyNFT","value","loadUserNFTs","nftCount","getListedNFTCount","nfts","i","nft","getListedNFT","push","balance","balanceOf","tokenOfOwnerByIndex","tokenURI","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","disabled","map","index","src","alt","formatEther","_c","$RefreshReg$"],"sources":["D:/JSPATH/nft-application/src/App.js"],"sourcesContent":["import { ethers } from 'ethers'\nimport React, { useEffect, useState } from 'react'\nimport './App.css'\n\n// 导入 ABI\nimport MarketABI from './abis/Market.json'\nimport MyNFTABI from './abis/MyNFT.json'\n\n// 这里是你的合约地址\nconst MYNFT_ADDRESS = \"0x4C4b321C3eFd7875073412E4c514226dd828A389\";\nconst MARKET_ADDRESS = \"0x4C4f3573008CB476721038535bB7906Cb4AfC00A\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [nftContract, setNftContract] = useState(null);\n  const [marketContract, setMarketContract] = useState(null);\n  const [tokenCID, setTokenCID] = useState('');\n  const [price, setPrice] = useState('');\n  const [nftsForSale, setNftsForSale] = useState([]);\n  const [userNFTs, setUserNFTs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 连接到 MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = newProvider.getSigner();\n      const newAccount = await newSigner.getAddress();\n      setAccount(newAccount);\n\n      const nftContractInstance = new ethers.Contract(MYNFT_ADDRESS, MyNFTABI.abi, newSigner);\n      setNftContract(nftContractInstance);\n\n      const marketContractInstance = new ethers.Contract(MARKET_ADDRESS, MarketABI.abi, newSigner);\n      setMarketContract(marketContractInstance);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  // 铸造 NFT\n  const mintNFT = async () => {\n    if (!tokenCID) return alert('Please enter a token CID!');\n    setLoading(true);\n    try {\n      const tx = await nftContract.safeMint(account, tokenCID);\n      await tx.wait();\n      alert('NFT minted successfully!');\n    } catch (err) {\n      console.error(err);\n      alert('Error minting NFT!');\n    }\n    setLoading(false);\n  };\n\n  // 上架 NFT\n  const listNFT = async (tokenId, price) => {\n    if (!price) return alert('Please enter a price!');\n    setLoading(true);\n    try {\n      const tx = await marketContract.listNFT(MYNFT_ADDRESS, tokenId, ethers.utils.parseEther(price));\n      await tx.wait();\n      alert('NFT listed for sale!');\n      loadNftsForSale(); // 更新市场上架的 NFT\n    } catch (err) {\n      console.error(err);\n      alert('Error listing NFT!');\n    }\n    setLoading(false);\n  };\n\n  // 购买 NFT\n  const buyNFT = async (tokenId, price) => {\n    setLoading(true);\n    try {\n      const tx = await marketContract.buyNFT(MYNFT_ADDRESS, tokenId, {\n        value: price,\n      });\n      await tx.wait();\n      alert('NFT purchased successfully!');\n      loadNftsForSale(); // 更新市场上架的 NFT\n      loadUserNFTs(); // 更新用户持有的 NFT\n    } catch (err) {\n      console.error(err);\n      alert('Error purchasing NFT!');\n    }\n    setLoading(false);\n  };\n\n  // 加载市场中的待售 NFT\n  const loadNftsForSale = async () => {\n    const nftCount = await marketContract.getListedNFTCount();\n    const nfts = [];\n    for (let i = 0; i < nftCount; i++) {\n      const nft = await marketContract.getListedNFT(i);\n      nfts.push(nft);\n    }\n    setNftsForSale(nfts);\n  };\n\n  // 加载用户持有的 NFT\n  const loadUserNFTs = async () => {\n    const balance = await nftContract.balanceOf(account);\n    const nfts = [];\n    for (let i = 0; i < balance; i++) {\n      const tokenId = await nftContract.tokenOfOwnerByIndex(account, i);\n      const tokenCID = await nftContract.tokenURI(tokenId);\n      nfts.push({ tokenId, tokenCID });\n    }\n    setUserNFTs(nfts);\n  };\n\n  useEffect(() => {\n    if (account && nftContract && marketContract) {\n      loadNftsForSale();\n      loadUserNFTs();\n    }\n  }, [account, nftContract, marketContract]);\n\n  return (\n    <div className=\"App\">\n      <h1>My NFT Marketplace</h1>\n      {!account ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <div>\n          <h2>Connected as: {account}</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Token CID\"\n            value={tokenCID}\n            onChange={(e) => setTokenCID(e.target.value)}\n          />\n          <button onClick={mintNFT} disabled={loading}>\n            {loading ? 'Minting...' : 'Mint NFT'}\n          </button>\n          <div>\n            <h3>Your NFTs</h3>\n            <div className=\"nft-list\">\n              {userNFTs.map((nft, index) => (\n                <div key={index} className=\"nft-card\">\n                  <img\n                    src={`https://ipfs.io/ipfs/${nft.tokenCID}`}\n                    alt={`NFT ${nft.tokenId}`}\n                    className=\"nft-image\"\n                  />\n                  <button onClick={() => listNFT(nft.tokenId, price)}>List for Sale</button>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Price (ETH)\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n          <div>\n            <h3>NFTs for Sale</h3>\n            <div className=\"nft-list\">\n              {nftsForSale.map((nft, index) => (\n                <div key={index} className=\"nft-card\">\n                  <img\n                    src={`https://ipfs.io/ipfs/${nft.tokenCID}`}\n                    alt={`NFT ${nft.tokenId}`}\n                    className=\"nft-image\"\n                  />\n                  <button onClick={() => buyNFT(nft.tokenId, nft.price)}>Buy for {ethers.utils.formatEther(nft.price)} ETH</button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}